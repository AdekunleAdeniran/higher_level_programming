7-base_geometry test module
===========================

>>> base = __import__('7-base_geometry').BaseGeometry

>>> Base = base()

>>> Base.integer_validator("age", "5")
Traceback (most recent call last):
TypeError: age must be an integer

>>> Base.integer_validator("age", 4)

>>> Base.integer_validator("age", True)
Traceback (most recent call last):
TypeError: age must be an integer

>>> Base.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> Base.integer_validator("age", (1,2))
Traceback (most recent call last):
TypeError: age must be an integer

>>> Base.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> Base.area(1)
Traceback (most recent call last):
TypeError: area() takes 1 positional argument but 2 were given

>>> Base.integer_validator("age", -8)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> Base.integer_validator("age", 75.50)
Traceback (most recent call last):
TypeError: age must be an integer

>>> Base.integer_validator("age", [1,2])
Traceback (most recent call last):
TypeError: age must be an integer

>>> Base.integer_validator("age", {'1': "str"})
Traceback (most recent call last):
TypeError: age must be an integer

>>> Base.integer_validator("age", {1, 2})
Traceback (most recent call last):
TypeError: age must be an integer

>>> Base.integer_validator("age", None)
Traceback (most recent call last):
TypeError: age must be an integer

>>> Base.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> Base.integer_validator("age", 55, 4)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given
